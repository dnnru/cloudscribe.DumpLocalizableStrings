<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Email List Subscriptions" xml:space="preserve">
    <value>Email List Subscriptions</value>
  </data>
  <data name="Newsletter Administration" xml:space="preserve">
    <value>Newsletter Administration</value>
  </data>
  <data name="Oops! Something went wrong" xml:space="preserve">
    <value>Oops! Something went wrong</value>
  </data>
  <data name="Oops! Something went wrong trying to validate your subscription" xml:space="preserve">
    <value>Oops! Something went wrong trying to validate your subscription</value>
  </data>
  <data name="We&#39;ve logged a problem and will look into it, sorry for the inconvenience." xml:space="preserve">
    <value>We&#39;ve logged a problem and will look into it, sorry for the inconvenience.</value>
  </data>
  <data name="Email subscription confirmed." xml:space="preserve">
    <value>Email subscription confirmed.</value>
  </data>
  <data name="Your email address has been confirmed, thanks for subscribing!" xml:space="preserve">
    <value>Your email address has been confirmed, thanks for subscribing!</value>
  </data>
  <data name="Include in Sign Up Widgets" xml:space="preserve">
    <value>Include in Sign Up Widgets</value>
  </data>
  <data name="Working..." xml:space="preserve">
    <value>Working...</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Back to List" xml:space="preserve">
    <value>Back to List</value>
  </data>
  <data name="Confirm Delete" xml:space="preserve">
    <value>Confirm Delete</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Are you sure you want to delete the email list {0} and all subscribers? You cannot undo this action." xml:space="preserve">
    <value>Are you sure you want to delete the email list {0} and all subscribers? You cannot undo this action.</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="{0} - Import Subscribers" xml:space="preserve">
    <value>{0} - Import Subscribers</value>
  </data>
  <data name="Import subscribers from a .csv file" xml:space="preserve">
    <value>Import subscribers from a .csv file</value>
  </data>
  <data name="Expected file format is Email,FirstName,LastName,IsVerified,IpAddress" xml:space="preserve">
    <value>Expected file format is Email,FirstName,LastName,IsVerified,IpAddress</value>
  </data>
  <data name="Only the first field Email is required, but if other fields are included they must be in the expected order" xml:space="preserve">
    <value>Only the first field Email is required, but if other fields are included they must be in the expected order</value>
  </data>
  <data name="Import" xml:space="preserve">
    <value>Import</value>
  </data>
  <data name="Email Lists" xml:space="preserve">
    <value>Email Lists</value>
  </data>
  <data name="First Page" xml:space="preserve">
    <value>First Page</value>
  </data>
  <data name="Last Page" xml:space="preserve">
    <value>Last Page</value>
  </data>
  <data name="Previous page" xml:space="preserve">
    <value>Previous page</value>
  </data>
  <data name="Next page" xml:space="preserve">
    <value>Next page</value>
  </data>
  <data name="New Email List" xml:space="preserve">
    <value>New Email List</value>
  </data>
  <data name="{0} - Subscribers" xml:space="preserve">
    <value>{0} - Subscribers</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Verified" xml:space="preserve">
    <value>Verified</value>
  </data>
  <data name="New Subscription" xml:space="preserve">
    <value>New Subscription</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Created" xml:space="preserve">
    <value>Created</value>
  </data>
  <data name="Send Preview Email Csv" xml:space="preserve">
    <value>Send Preview Email Csv</value>
  </data>
  <data name="Send Preview On Save" xml:space="preserve">
    <value>Send Preview On Save</value>
  </data>
  <data name="Send to List" xml:space="preserve">
    <value>Send to List</value>
  </data>
  <data name="Are you sure you want to delete the Message {0}? You cannot undo this action." xml:space="preserve">
    <value>Are you sure you want to delete the Message {0}? You cannot undo this action.</value>
  </data>
  <data name="Are you sure you want to send this message to the selected list? You cannot undo this action." xml:space="preserve">
    <value>Are you sure you want to send this message to the selected list? You cannot undo this action.</value>
  </data>
  <data name="Messages" xml:space="preserve">
    <value>Messages</value>
  </data>
  <data name="New Message" xml:space="preserve">
    <value>New Message</value>
  </data>
  <data name="Email Address" xml:space="preserve">
    <value>Email Address</value>
  </data>
  <data name="Last Name" xml:space="preserve">
    <value>Last Name</value>
  </data>
  <data name="First Name" xml:space="preserve">
    <value>First Name</value>
  </data>
  <data name="Is Verified" xml:space="preserve">
    <value>Is Verified</value>
  </data>
  <data name="Verification Send Count" xml:space="preserve">
    <value>Verification Send Count</value>
  </data>
  <data name="Verified Utc" xml:space="preserve">
    <value>Verified Utc</value>
  </data>
  <data name="IpAddress" xml:space="preserve">
    <value>IpAddress</value>
  </data>
  <data name="UserId" xml:space="preserve">
    <value>UserId</value>
  </data>
  <data name="Created Utc" xml:space="preserve">
    <value>Created Utc</value>
  </data>
  <data name="Last Modified Utc" xml:space="preserve">
    <value>Last Modified Utc</value>
  </data>
  <data name="Are you sure you want to delete {0}?" xml:space="preserve">
    <value>Are you sure you want to delete {0}?</value>
  </data>
  <data name="Are you sure you want to send confirmation for {0}?" xml:space="preserve">
    <value>Are you sure you want to send confirmation for {0}?</value>
  </data>
  <data name="Sorry we did not find a subscription to unsubscribe." xml:space="preserve">
    <value>Sorry we did not find a subscription to unsubscribe.</value>
  </data>
  <data name="Thanks for signing up! Your subscription is confirmed." xml:space="preserve">
    <value>Thanks for signing up! Your subscription is confirmed.</value>
  </data>
  <data name="Thanks for signing up! You should get an email within the next 20 minutes, we&#39;ve sent you a link to confirm your subscription." xml:space="preserve">
    <value>Thanks for signing up! You should get an email within the next 20 minutes, we&#39;ve sent you a link to confirm your subscription.</value>
  </data>
  <data name="You have been unsubscribed." xml:space="preserve">
    <value>You have been unsubscribed.</value>
  </data>
  <data name="Sign up for our newsletter!" xml:space="preserve">
    <value>Sign up for our newsletter!</value>
  </data>
  <data name="Email address" xml:space="preserve">
    <value>Email address</value>
  </data>
  <data name="Sign Up" xml:space="preserve">
    <value>Sign Up</value>
  </data>
</root>