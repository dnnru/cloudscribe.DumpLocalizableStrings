<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Ask a question" xml:space="preserve">
    <value>Ask a question</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="Body" xml:space="preserve">
    <value>Body</value>
  </data>
  <data name="Tags" xml:space="preserve">
    <value>Tags</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="What&#39;s your question? Be very specific." xml:space="preserve">
    <value>What&#39;s your question? Be very specific.</value>
  </data>
  <data name="Preview" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="Working..." xml:space="preserve">
    <value>Working...</value>
  </data>
  <data name="Post Your Question" xml:space="preserve">
    <value>Post Your Question</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Thread list page size" xml:space="preserve">
    <value>Thread list page size</value>
  </data>
  <data name="Allow anonymous users" xml:space="preserve">
    <value>Allow anonymous users</value>
  </data>
  <data name="Moderate anonymous posts" xml:space="preserve">
    <value>Moderate anonymous posts</value>
  </data>
  <data name="Require captcha for anonymous users" xml:space="preserve">
    <value>Require captcha for anonymous users</value>
  </data>
  <data name="Moderate authenticated posts" xml:space="preserve">
    <value>Moderate authenticated posts</value>
  </data>
  <data name="Moderation notification email CSV" xml:space="preserve">
    <value>Moderation notification email CSV</value>
  </data>
  <data name="Allow image upload for authenticated users" xml:space="preserve">
    <value>Allow image upload for authenticated users</value>
  </data>
  <data name="Anonymize user posts for GDPR delete request" xml:space="preserve">
    <value>Anonymize user posts for GDPR delete request</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="No results found" xml:space="preserve">
    <value>No results found</value>
  </data>
  <data name="Be the first to ask a question!" xml:space="preserve">
    <value>Be the first to ask a question!</value>
  </data>
  <data name="First Page" xml:space="preserve">
    <value>First Page</value>
  </data>
  <data name="Last Page" xml:space="preserve">
    <value>Last Page</value>
  </data>
  <data name="Previous page" xml:space="preserve">
    <value>Previous page</value>
  </data>
  <data name="Next page" xml:space="preserve">
    <value>Next page</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="text to find" xml:space="preserve">
    <value>text to find</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Ask Question" xml:space="preserve">
    <value>Ask Question</value>
  </data>
  <data name="Configuration" xml:space="preserve">
    <value>Configuration</value>
  </data>
  <data name="Forum" xml:space="preserve">
    <value>Forum</value>
  </data>
  <data name="Label" xml:space="preserve">
    <value>Label</value>
  </data>
  <data name="Edit Tag" xml:space="preserve">
    <value>Edit Tag</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Are you sure you want to delete the tag {0}?" xml:space="preserve">
    <value>Are you sure you want to delete the tag {0}?</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Confirm Delete" xml:space="preserve">
    <value>Confirm Delete</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="New Tag" xml:space="preserve">
    <value>New Tag</value>
  </data>
  <data name="Add Tag" xml:space="preserve">
    <value>Add Tag</value>
  </data>
  <data name="This question shows research and effort; it is useful and clear" xml:space="preserve">
    <value>This question shows research and effort; it is useful and clear</value>
  </data>
  <data name="This question does not show any research effort; it is unclear or not useful" xml:space="preserve">
    <value>This question does not show any research effort; it is unclear or not useful</value>
  </data>
  <data name="Cancel Edit" xml:space="preserve">
    <value>Cancel Edit</value>
  </data>
  <data name="asked" xml:space="preserve">
    <value>asked</value>
  </data>
  <data name="add a comment" xml:space="preserve">
    <value>add a comment</value>
  </data>
  <data name="add comment" xml:space="preserve">
    <value>add comment</value>
  </data>
  <data name="Answers" xml:space="preserve">
    <value>Answers</value>
  </data>
  <data name="Please enable javascript to use this feature." xml:space="preserve">
    <value>Please enable javascript to use this feature.</value>
  </data>
  <data name="Are you sure you want to delete the this Thread?" xml:space="preserve">
    <value>Are you sure you want to delete the this Thread?</value>
  </data>
  <data name="Insert Link" xml:space="preserve">
    <value>Insert Link</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="Insert Image" xml:space="preserve">
    <value>Insert Image</value>
  </data>
  <data name="votes" xml:space="preserve">
    <value>votes</value>
  </data>
  <data name="answers" xml:space="preserve">
    <value>answers</value>
  </data>
  <data name="views" xml:space="preserve">
    <value>views</value>
  </data>
  <data name="Your Answer" xml:space="preserve">
    <value>Your Answer</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="Post answer" xml:space="preserve">
    <value>Post answer</value>
  </data>
  <data name="Log in" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="Log in to post" xml:space="preserve">
    <value>Log in to post</value>
  </data>
  <data name="You can post an answer as guest, but some features may not be available." xml:space="preserve">
    <value>You can post an answer as guest, but some features may not be available.</value>
  </data>
  <data name="answered" xml:space="preserve">
    <value>answered</value>
  </data>
  <data name="This answer is useful" xml:space="preserve">
    <value>This answer is useful</value>
  </data>
  <data name="This answer not useful" xml:space="preserve">
    <value>This answer not useful</value>
  </data>
  <data name="Click to accept this answer" xml:space="preserve">
    <value>Click to accept this answer</value>
  </data>
  <data name="Click to un-accept this answer" xml:space="preserve">
    <value>Click to un-accept this answer</value>
  </data>
  <data name="This comment is not yet visible to the public, it will become visible once it is approved by a moderator." xml:space="preserve">
    <value>This comment is not yet visible to the public, it will become visible once it is approved by a moderator.</value>
  </data>
  <data name="Approve" xml:space="preserve">
    <value>Approve</value>
  </data>
  <data name="Are you sure you want to delete the this comment?" xml:space="preserve">
    <value>Are you sure you want to delete the this comment?</value>
  </data>
  <data name="Forum Comment Notification" xml:space="preserve">
    <value>Forum Comment Notification</value>
  </data>
  <data name="{0} commented on {1}" xml:space="preserve">
    <value>{0} commented on {1}</value>
  </data>
  <data name="Email:" xml:space="preserve">
    <value>Email:</value>
  </data>
  <data name="IP Address:" xml:space="preserve">
    <value>IP Address:</value>
  </data>
  <data name="UTC:" xml:space="preserve">
    <value>UTC:</value>
  </data>
  <data name="has replied to your question, please vist the thread to see the latest posts." xml:space="preserve">
    <value>has replied to your question, please vist the thread to see the latest posts.</value>
  </data>
  <data name="Forum Thread Notification" xml:space="preserve">
    <value>Forum Thread Notification</value>
  </data>
  <data name="New forum thread by {0}" xml:space="preserve">
    <value>New forum thread by {0}</value>
  </data>

</root>