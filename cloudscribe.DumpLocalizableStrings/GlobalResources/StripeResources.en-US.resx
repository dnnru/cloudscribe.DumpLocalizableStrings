<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Name on Card" xml:space="preserve">
    <value>Name on Card</value>
  </data>
  <data name="Name is required" xml:space="preserve">
    <value>Name is required</value>
  </data>
  <data name="Credit Card Number" xml:space="preserve">
    <value>Credit Card Number</value>
  </data>
  <data name="Expiration Month" xml:space="preserve">
    <value>Expiration Month</value>
  </data>
  <data name="Expiration Year" xml:space="preserve">
    <value>Expiration Year</value>
  </data>
  <data name="Billing Address Line 1" xml:space="preserve">
    <value>Billing Address Line 1</value>
  </data>
  <data name="Address line 1 is required" xml:space="preserve">
    <value>Address line 1 is required</value>
  </data>
  <data name="Billing Address Line 2" xml:space="preserve">
    <value>Billing Address Line 2</value>
  </data>
  <data name="Billing Country" xml:space="preserve">
    <value>Billing Country</value>
  </data>
  <data name="Country is required" xml:space="preserve">
    <value>Country is required</value>
  </data>
  <data name="Billing State/Region" xml:space="preserve">
    <value>Billing State/Region</value>
  </data>
  <data name="State/Region is required" xml:space="preserve">
    <value>State/Region is required</value>
  </data>
  <data name="Billing City" xml:space="preserve">
    <value>Billing City</value>
  </data>
  <data name="City is required" xml:space="preserve">
    <value>City is required</value>
  </data>
  <data name="Postal Code" xml:space="preserve">
    <value>Postal Code</value>
  </data>
  <data name="Postal code is required" xml:space="preserve">
    <value>Postal code is required</value>
  </data>
  <data name="Confirm Delete" xml:space="preserve">
    <value>Confirm Delete</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Are you sure you want to delete the {0} card ending in {1}?" xml:space="preserve">
    <value>Are you sure you want to delete the {0} card ending in {1}?</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Make This Card the Default Payment Method?" xml:space="preserve">
    <value>Make This Card the Default Payment Method?</value>
  </data>
  <data name="Are you sure you want to make the &lt;b&gt;{0} card ending in {1}&lt;/b&gt; your default payment method? Any existing subscriptions you may have with us will be changed to use the new default payment method if you make this change." xml:space="preserve">
    <value>Are you sure you want to make the &lt;b&gt;{0} card ending in {1}&lt;/b&gt; your default payment method? Any existing subscriptions you may have with us will be changed to use the new default payment method if you make this change.</value>
  </data>
  <data name="Make Default" xml:space="preserve">
    <value>Make Default</value>
  </data>
  <data name="Manage Payment Methods" xml:space="preserve">
    <value>Manage Payment Methods</value>
  </data>
  <data name="ending in" xml:space="preserve">
    <value>ending in</value>
  </data>
  <data name="Expires" xml:space="preserve">
    <value>Expires</value>
  </data>
  <data name="This is your default card. The default card is always used for any recurring payments such as subscriptions." xml:space="preserve">
    <value>This is your default card. The default card is always used for any recurring payments such as subscriptions.</value>
  </data>
  <data name="Billing Information" xml:space="preserve">
    <value>Billing Information</value>
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="Add New Card" xml:space="preserve">
    <value>Add New Card</value>
  </data>
  <data name="Add Card" xml:space="preserve">
    <value>Add Card</value>
  </data>
  <data name="Update Card" xml:space="preserve">
    <value>Update Card</value>
  </data>
  <data name="CVC" xml:space="preserve">
    <value>CVC</value>
  </data>
  <data name="Expiration" xml:space="preserve">
    <value>Expiration</value>
  </data>
  <data name="Charges" xml:space="preserve">
    <value>Charges</value>
  </data>
  <data name="Customer Charges" xml:space="preserve">
    <value>Customer Charges</value>
  </data>
  <data name="Charge Id/Invoice Id" xml:space="preserve">
    <value>Charge Id/Invoice Id</value>
  </data>
  <data name="Customer Id" xml:space="preserve">
    <value>Customer Id</value>
  </data>
  <data name="Created" xml:space="preserve">
    <value>Created</value>
  </data>
  <data name="Amount" xml:space="preserve">
    <value>Amount</value>
  </data>
  <data name="Paid" xml:space="preserve">
    <value>Paid</value>
  </data>
  <data name="Refunded" xml:space="preserve">
    <value>Refunded</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Previous" xml:space="preserve">
    <value>Previous</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="Stripe Customers" xml:space="preserve">
    <value>Stripe Customers</value>
  </data>
  <data name="Manage User" xml:space="preserve">
    <value>Manage User</value>
  </data>
  <data name="First Page" xml:space="preserve">
    <value>First Page</value>
  </data>
  <data name="Last Page" xml:space="preserve">
    <value>Last Page</value>
  </data>
  <data name="Previous page" xml:space="preserve">
    <value>Previous page</value>
  </data>
  <data name="Next page" xml:space="preserve">
    <value>Next page</value>
  </data>
  <data name="Subscriptions" xml:space="preserve">
    <value>Subscriptions</value>
  </data>
  <data name="Invoices" xml:space="preserve">
    <value>Invoices</value>
  </data>
  <data name="Disputes" xml:space="preserve">
    <value>Disputes</value>
  </data>
  <data name="Id/Charge Id" xml:space="preserve">
    <value>Id/Charge Id</value>
  </data>
  <data name="Reason" xml:space="preserve">
    <value>Reason</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Events" xml:space="preserve">
    <value>Events</value>
  </data>
  <data name="Event Id" xml:space="preserve">
    <value>Event Id</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Stripe Administration" xml:space="preserve">
    <value>Stripe Administration</value>
  </data>
  <data name="Balance - Available" xml:space="preserve">
    <value>Balance - Available</value>
  </data>
  <data name="Funds that are available to be paid out." xml:space="preserve">
    <value>Funds that are available to be paid out.</value>
  </data>
  <data name="Balance - Pending" xml:space="preserve">
    <value>Balance - Pending</value>
  </data>
  <data name="Funds that are not yet available in the balance, due to the 7-day rolling pay cycle. " xml:space="preserve">
    <value>Funds that are not yet available in the balance, due to the 7-day rolling pay cycle. </value>
  </data>
  <data name="Customer Invoices" xml:space="preserve">
    <value>Customer Invoices</value>
  </data>
  <data name="Invoice Id/Number/Charge Id/Subscription Id" xml:space="preserve">
    <value>Invoice Id/Number/Charge Id/Subscription Id</value>
  </data>
  <data name="Amount Due" xml:space="preserve">
    <value>Amount Due</value>
  </data>
  <data name="Amount Paid" xml:space="preserve">
    <value>Amount Paid</value>
  </data>
  <data name="Attempted" xml:space="preserve">
    <value>Attempted</value>
  </data>
  <data name="Billing" xml:space="preserve">
    <value>Billing</value>
  </data>
  <data name="Not Configured" xml:space="preserve">
    <value>Not Configured</value>
  </data>
  <data name="Stripe settings have not been configured yet. The settings would typically be set in appsettings.Production.json or appsettings.Development.json" xml:space="preserve">
    <value>Stripe settings have not been configured yet. The settings would typically be set in appsettings.Production.json or appsettings.Development.json</value>
  </data>
  <data name="Refunds" xml:space="preserve">
    <value>Refunds</value>
  </data>
  <data name="Cancel Automatic Renewal" xml:space="preserve">
    <value>Cancel Automatic Renewal</value>
  </data>
  <data name="Customer Subscriptions" xml:space="preserve">
    <value>Customer Subscriptions</value>
  </data>
  <data name="Plan" xml:space="preserve">
    <value>Plan</value>
  </data>
  <data name="Id" xml:space="preserve">
    <value>Id</value>
  </data>
  <data name="Current Period Start" xml:space="preserve">
    <value>Current Period Start</value>
  </data>
  <data name="Current Period End" xml:space="preserve">
    <value>Current Period End</value>
  </data>
  <data name="Renewal Cancelled" xml:space="preserve">
    <value>Renewal Cancelled</value>
  </data>
  <data name="Automatic Renewal" xml:space="preserve">
    <value>Automatic Renewal</value>
  </data>
  <data name="Cancel Automatic Renewal?" xml:space="preserve">
    <value>Cancel Automatic Renewal?</value>
  </data>
  <data name="Are you sure you want to cancel automatic renewal for this subscription?" xml:space="preserve">
    <value>Are you sure you want to cancel automatic renewal for this subscription?</value>
  </data>

</root>